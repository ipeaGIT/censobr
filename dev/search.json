[{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to censobr","text":"","code":"# install from CRAN install.packages(\"censobr\")  # or use the development version with latest features utils::remove.packages('censobr') remotes::install_github(\"ipeaGIT/censobr\", ref=\"dev\")"},{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Introduction to censobr","text":"package currently includes 6 main functions download census data: read_population() read_households() read_mortality() read_families() read_emigration() read_tracts() {censobr} also includes support functions help users navigate documentation Brazilian censuses, providing convenient information data variables methodology.: data_dictionary() questionnaire() interview_manual() Finally, package includes function help users manage data cached locally. censobr_cache() syntax {censobr} functions read data operate logic becomes intuitive download data set using single line code. Like : Note: data sets {censobr} enriched geography columns following name standards {geobr} package help data manipulation integration spatial data {geobr}. added columns : c(‘code_muni’, ‘code_state’, ‘abbrev_state’, ‘name_state’, ‘code_region’, ‘name_region’, ‘code_weighting’). Data Cache: first time user runs function, {censobr} download file store locally. way, data needs downloaded . info Data cache section .","code":"read_households(   year,          # year of reference   columns,       # select columns to read   add_labels,    # add labels to categorical variables   as_data_frame, # return an Arrow DataSet or a data.frame   showProgress,  # show download progress bar   cache          # cache data for faster access later   )"},{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"larger-than-memory-data","dir":"Articles","previous_headings":"","what":"Larger-than-memory Data","title":"Introduction to censobr","text":"Data Brazilian censuses often big load users’ RAM memory. avoid problem, {censobr} default return Arrow table, can analyzed like regular data.frame using dplyr package without loading full data memory. Let’s see {censobr} works couple examples:","code":""},{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"reproducible-examples","dir":"Articles","previous_headings":"","what":"Reproducible examples","title":"Introduction to censobr","text":"First, let’s load libraries ’ll using vignette.","code":"library(censobr) library(arrow) library(dplyr) library(ggplot2)"},{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"using-population-data","dir":"Articles","previous_headings":"Reproducible examples","what":"Using Population data:","title":"Introduction to censobr","text":"example ’ll calculating proportion people higher education different racial groups state Rio de Janeiro. First, need use read_population() function download population data set. Since don’t need load memory columns data, can pass vector names columns ’re going use. might necessary constrained computing environments. Note setting add_labels = 'pt', function returns labeled values categorical variables. default, output function \"arrow_dplyr_query\". makes possible work census data super fast efficient way, even though data set might big computer memory. setting parameter as_data_frame = TRUE, read functions load entire output memory data.frame. Warning: can cause R session crash computationally constrained environments. output read functions {censobr} can analyzed like regular data.frame using dplyr package. example, one can quick peak data set glimpse() example , use dplyr syntax () filter observations state Rio de Janeiro, (b) group observations racial group, (c) summarize data calculating proportion individuals higher education. Note need add collect() call end query. Now need plot results.","code":"pop <- read_population(   year = 2010,   columns = c('abbrev_state', 'V0606', 'V0010', 'V6400'),   add_labels = 'pt',   showProgress = FALSE   )  class(pop) #> [1] \"arrow_dplyr_query\" dplyr::glimpse(pop) #> FileSystemDataset with 1 Parquet file (query) #> 20,635,472 rows x 4 columns #> $ abbrev_state <string> \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"R… #> $ V0606        <string> \"Parda\", \"Parda\", \"Branca\", \"Branca\", \"Parda\", \"Parda\", … #> $ V0010        <double> 8.705865, 8.705865, 9.818689, 9.495608, 9.495608, 9.4956… #> $ V6400        <string> \"Sem instrução e fundamental incompleto\", \"Sem instrução… #> Call `print()` for query details df <- pop |>       filter(abbrev_state == \"RJ\") |>                                                    # (a)       compute() |>       group_by(V0606) |>                                                                 # (b)       summarize(higher_edu = sum(V0010[which(V6400==\"Superior completo\")]) / sum(V0010), # (c)                 pop = sum(V0010) ) |>       collect()  head(df) #> # A tibble: 6 × 3 #>   V0606    higher_edu      pop #>   <chr>         <dbl>    <dbl> #> 1 Amarela      0.0782  122552. #> 2 Branca       0.151  7579023. #> 3 Ignorado     0         3397. #> 4 Indígena     0.109    15258. #> 5 Parda        0.0443 6332408. #> 6 Preta        0.0405 1937291. df <- subset(df, V0606 != 'Ignorado')  ggplot() +   geom_col(data = df, aes(x=V0606, y=higher_edu), fill = '#5c997e') +   scale_y_continuous(name = 'Proportion with higher education',                      labels = scales::percent) +   labs(x = 'Cor/raça') +   theme_classic()"},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"sewage-coverage","dir":"Articles","previous_headings":"Reproducible examples > Using household data:","what":"Sewage coverage:","title":"Introduction to censobr","text":"example, going map proportion households connected sewage network Brazilian municipalities First, can easily download households data set read_households() function. Now ’re going () group observations municipality, (b) get number households connected sewage network, (c) calculate proportion households connected, (d) collect results. order create map values, going use {geobr} package download geometries Brazilian municipalities. Now need merge spatial data estimates map results.","code":"hs <- read_households(   year = 2010,    showProgress = FALSE   ) esg <- hs |>          compute() |>         group_by(code_muni) |>                                             # (a)         summarize(rede = sum(V0010[which(V0207=='1')]),                    # (b)                   total = sum(V0010)) |>                                   # (b)         mutate(cobertura = rede / total) |>                                # (c)         collect()                                                          # (d)  head(esg) #> # A tibble: 6 × 4 #>   code_muni     rede  total cobertura #>       <int>    <dbl>  <dbl>     <dbl> #> 1   1100015     0     7443.   0       #> 2   1100023   182.   27654.   0.00660 #> 3   1100031     0     1979.   0       #> 4   1100049 10019.   24413.   0.410   #> 5   1100056     5.81  5399    0.00108 #> 6   1100064    28.9   6013.   0.00480 library(geobr)  muni_sf <- geobr::read_municipality(   year = 2010,   showProgress = FALSE   )  head(muni_sf) #> Simple feature collection with 6 features and 4 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -63.61822 ymin: -13.6937 xmax: -60.33317 ymax: -9.66916 #> Geodetic CRS:  SIRGAS 2000 #>   code_muni             name_muni code_state abbrev_state #> 1   1100015 Alta Floresta D'oeste         11           RO #> 2   1100023             Ariquemes         11           RO #> 3   1100031                Cabixi         11           RO #> 4   1100049                Cacoal         11           RO #> 5   1100056            Cerejeiras         11           RO #> 6   1100064     Colorado Do Oeste         11           RO #>                             geom #> 1 MULTIPOLYGON (((-62.2462 -1... #> 2 MULTIPOLYGON (((-63.13712 -... #> 3 MULTIPOLYGON (((-60.52408 -... #> 4 MULTIPOLYGON (((-61.42679 -... #> 5 MULTIPOLYGON (((-61.41347 -... #> 6 MULTIPOLYGON (((-60.66352 -... esg_sf <- left_join(muni_sf, esg, by = 'code_muni')  ggplot() +   geom_sf(data = esg_sf, aes(fill = cobertura), color=NA) +   labs(title = \"Share of households connected to a sewage network\") +   scale_fill_distiller(palette = \"Greens\", direction = 1,                         name='Share of\\nhouseholds',                         labels = scales::percent) +   theme_void()"},{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"spatial-distribution-of-rents","dir":"Articles","previous_headings":"Reproducible examples > Using household data:","what":"Spatial distribution of rents:","title":"Introduction to censobr","text":"final example, ’re going visualize amount money people spend rent varies spatially across metropolitan area São Paulo. First, let’s download municipalities metro area São Paulo. also need polygons weighting areas (áreas de ponderação). code , download weighting areas state São Paulo, keep ones metropolitan region São Paulo. Now need calculate average rent spent weighting area. Using national household data set, ’re going () filter observations municipalities interest, (b) group observations weighting area, (c) calculate average rent, (d) collect results. Finally, can merge spatial data rent estimates map results.","code":"metro_muni <- geobr::read_metro_area(   year = 2010,    showProgress = FALSE) |>   subset(name_metro == \"RM São Paulo\") wt_areas <- geobr::read_weighting_area(   code_weighting = \"SP\",    showProgress = FALSE,   year = 2010   )  wt_areas <- subset(wt_areas, code_muni %in% metro_muni$code_muni) head(wt_areas) #> Simple feature collection with 6 features and 7 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -46.73454 ymin: -23.64487 xmax: -46.64756 ymax: -23.53528 #> Geodetic CRS:  SIRGAS 2000 #>    code_weighting code_muni name_muni code_state abbrev_state code_region #> 5   3550308005100   3550308 São Paulo         35           SP           3 #> 6   3550308005102   3550308 São Paulo         35           SP           3 #> 8   3550308005101   3550308 São Paulo         35           SP           3 #> 10  3550308005104   3550308 São Paulo         35           SP           3 #> 12  3550308005103   3550308 São Paulo         35           SP           3 #> 14  3550308005106   3550308 São Paulo         35           SP           3 #>    name_region                           geom #> 5      Sudeste MULTIPOLYGON (((-46.67201 -... #> 6      Sudeste MULTIPOLYGON (((-46.67663 -... #> 8      Sudeste MULTIPOLYGON (((-46.67257 -... #> 10     Sudeste MULTIPOLYGON (((-46.70138 -... #> 12     Sudeste MULTIPOLYGON (((-46.69581 -... #> 14     Sudeste MULTIPOLYGON (((-46.73454 -... rent <- hs |>         filter(code_muni %in% metro_muni$code_muni) |>                     # (a)         compute() |>         group_by(code_weighting) |>                                        # (b)         summarize(avgrent=weighted.mean(x=V2011, w=V0010, na.rm=TRUE)) |>  # (c)         collect()                                                          # (d)  head(rent) #> # A tibble: 6 × 2 #>   code_weighting avgrent #>   <chr>            <dbl> #> 1 3503901003001     355. #> 2 3503901003002     627. #> 3 3503901003003     358. #> 4 3505708005001     577. #> 5 3505708005002     397. #> 6 3505708005003     327. rent_sf <- left_join(wt_areas, rent, by = 'code_weighting')  ggplot() +   geom_sf(data = rent_sf, aes(fill = avgrent), color=NA) +   geom_sf(data = metro_muni, color='gray', fill=NA) +   scale_fill_distiller(palette = \"Greens\", direction = 1,                         name='Avgerage\\nRent in R$') +   theme_void()"},{"path":"https://ipeagit.github.io/censobr/dev/articles/censobr.html","id":"data-cache","dir":"Articles","previous_headings":"Reproducible examples","what":"Data cache","title":"Introduction to censobr","text":"first time user runs function, {censobr} download file store locally. way, data needs downloaded . cache parameter set TRUE (Default), function read cached data, much faster. Users can manage cached data sets using censobr_cache() function. example, users can: List cached files tree format: Delete particular file: Delete files: default, {censobr} files saved ‘User’ directory. However, users can run function set_censobr_cache_dir() set custom cache directory. directory persistent across R sessions. Mind data saved directory inside cache directory set user versioned according version latest data release. remember location cache, can always run get_censobr_cache_dir() return path cache directory use, run set_censobr_cache_dir(path = NULL) set default cache directory back.","code":"censobr::censobr_cache(   list_files = TRUE,    print_tree = TRUE   ) censobr::censobr_cache(delete_file = \"2010_emigration\") censobr::censobr_cache(delete_file = \"all\") tempf <- fs::path_temp(pattern = \"my_temp_dir\")  censobr::set_censobr_cache_dir(path = tempf) #> ℹ censobr files will be cached at #> /tmp/RtmpP2VPs1/my_temp_dir. # download file to our new cache dir df_emi <- censobr::read_emigration(year = 2010)  # check files in current cache dir censobr::censobr_cache(   list_files = TRUE,    print_tree = TRUE   ) #> /tmp/RtmpP2VPs1/my_temp_dir #> └── data_release_v0.5.0 #>     └── 2010_emigration_v0.5.0.parquet"},{"path":"https://ipeagit.github.io/censobr/dev/articles/census_tracts_data.html","id":"data-structure","dir":"Articles","previous_headings":"","what":"Data structure","title":"Census tract-level data","text":"Aggregated data census tract level split different datasets, scattered across several files. sake convenience, gathered files different datasets: \"Basico\" \"Entorno\" \"Domicilio\" \"Pessoa\" \"Responsavel\" \"PessoaRenda\" \"DomicilioRenda\" \"ResponsavelRenda\" data aggregated census tracts organized following logic. cases multiple files dataset, add reference number file prefix variable name. illustrate , let’s look \"Domicilio\" dataset. dataset based three separate tables: Domicilio01, Domicilio02 Domicilio03. names columns dataset organized follows:","code":"library(censobr)  dom <- read_tracts(   year = 2022,   dataset = 'Domicilio',    showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use.  names(dom)[c(30:33,119:121, 526:528)] #>  [1] \"domicilio01_V00001\" \"domicilio01_V00002\" \"domicilio01_V00003\" #>  [4] \"domicilio01_V00004\" \"domicilio02_V00090\" \"domicilio02_V00091\" #>  [7] \"domicilio02_V00092\" \"domicilio03_V00497\" \"domicilio03_V00498\" #> [10] \"domicilio03_V00499\""},{"path":"https://ipeagit.github.io/censobr/dev/articles/census_tracts_data.html","id":"dictionary-of-variables","dir":"Articles","previous_headings":"Data structure","what":"Dictionary of variables","title":"Census tract-level data","text":"check meaning variable, users can run data_dictionary(), open file dictionary variables dataset. dictionary file either .html, .pdf .xlsx file, depending data set year.","code":"data_dictionary(   year = 2022,    dataset = 'tracts'   ) #> NULL"},{"path":"https://ipeagit.github.io/censobr/dev/articles/census_tracts_data.html","id":"reproducible-examples","dir":"Articles","previous_headings":"","what":"Reproducible examples","title":"Census tract-level data","text":"Now let’s use couple reproducible examples illustrate work census tract-level data. First, need load libraries ’ll using vignette. examples , example ’ll use city Belo Horizonte demonstration purposes. can start downloading geometries census tracts area. First, need download geometries census tracts state Minas Gerais (MG), keep ones municipality Belo Horizonte. ’ll also download municipality borders BH.","code":"library(arrow) library(dplyr) library(geobr) library(ggplot2) muni_bh <- geobr::read_municipality(   code_muni = 'MG',    year = 2010,    showProgress = FALSE   ) |>   filter(name_muni == \"Belo Horizonte\") #> Using year/date 2010  tracts_sf <- geobr::read_census_tract(   code_tract = \"MG\",   simplified = FALSE,   year = 2010,   showProgress = FALSE   ) #> Using year/date 2010  tracts_sf <- filter(tracts_sf, name_muni == \"Belo Horizonte\")  ggplot() +    geom_sf(data=tracts_sf, fill = 'gray90', color='gray60') +    theme_void()"},{"path":"https://ipeagit.github.io/censobr/dev/articles/census_tracts_data.html","id":"example-1","dir":"Articles","previous_headings":"Reproducible examples","what":"Example 1:","title":"Census tract-level data","text":"first example going map proportion households presence trees surroundings. , need download \"Entorno\" dataset sum variables domicilios_V05031 + domicilios_V05032 + domicilios_V05033. Now can merge spatial data indicator see presence trees surroundings households varies spatially.","code":"# download data tract_entorno <- censobr::read_tracts(   year = 2022,   dataset = \"Entorno\",    showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use.  # filter observations and calculate indicator df_trees <- tract_entorno |>   filter(code_tract %in% tracts_sf$code_tract) |>   group_by(code_tract) |>   mutate(total_households = domicilios_V05000,          trees = domicilios_V05031 + domicilios_V05032+ domicilios_V05033,          trees_prop = trees / total_households) |>   select(code_tract, total_households, trees, trees_prop) |>   collect()  head(df_trees) #> # A tibble: 6 × 4 #> # Groups:   code_tract [6] #>   code_tract      total_households trees trees_prop #>   <chr>                      <dbl> <dbl>      <dbl> #> 1 310620005620001              222   222      1     #> 2 310620005620002              158   158      1     #> 3 310620005620004              294   294      1     #> 4 310620005620005              131   131      1     #> 5 310620005620006              142   138      0.972 #> 6 310620005620007              218   218      1 bh_tracts <- left_join(tracts_sf, df_trees, by = 'code_tract')  ggplot() +   geom_sf(data = bh_tracts, aes(fill = trees_prop), color=NA) +   geom_sf(data = muni_bh, color='gray10', fill=NA) +   labs(subtitle = 'Share of households with trees in their surroundings.\\nBelo Horizonte, 2010') +   scale_fill_distiller(palette = \"Greens\", direction = 1,                         name='Share of\\nhouseholds',                         na.value = \"gray90\",                        labels = scales::percent) +   theme_void()"},{"path":"https://ipeagit.github.io/censobr/dev/articles/census_tracts_data.html","id":"example-2-spatial-distribution-of-income","dir":"Articles","previous_headings":"Reproducible examples","what":"Example 2: Spatial distribution of income","title":"Census tract-level data","text":"second example, going create map spatial distribution average income per capita. Unfortunately, information collected 2022 census census tract level, example based 2010 data. 2010 census, can find information total number residents census tract \"Basico\" dataset, variable \"V002\". Meanwhile, information income can found \"DomicilioRenda\" dataset, variable \"V003\". Using code , download data calculate income per capita census tracts Brazil. Finally, can merge spatial data per capita income estimates map results.","code":"# download data tract_basico <- censobr::read_tracts(   year = 2010,   dataset = \"Basico\",    showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use.  tract_income <- censobr::read_tracts(   year = 2010,   dataset = \"DomicilioRenda\",    showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use.  # select columns tract_basico <- tract_basico |> select('code_tract','V002') tract_income <- tract_income |> select('code_tract','V003')  # merge tracts_df <- left_join(tract_basico, tract_income) |> collect()  # calculate income per capita tracts_df <- tracts_df |> mutate(income_pc = V003 / V002) head(tracts_df) #> # A tibble: 6 × 4 #>   code_tract       V002   V003 income_pc #>   <chr>           <dbl>  <dbl>     <dbl> #> 1 220740505000003   714 145414      204. #> 2 220740505000004   436  47457      109. #> 3 220740505000005   287  45302      158. #> 4 220740505000006   331  47624      144. #> 5 220740505000007   846 133232      157. #> 6 220740505000008   196  45780      234. bh_tracts <- left_join(tracts_sf, tracts_df, by = 'code_tract')  ggplot() +   geom_sf(data = bh_tracts, aes(fill = income_pc), color=NA) +   geom_sf(data = muni_bh, color='gray10', fill=NA) +   labs(subtitle = 'Avgerage income per capita.\\nBelo Horizonte, 2010') +   scale_fill_viridis_c(name = \"Income per\\ncapita (R$)\",                        labels = scales::number_format(),                        option = 'cividis',                        breaks = c(0, 500, 1e3, 5e3, 1e4, 2e4),                        trans = \"pseudo_log\", na.value = \"gray90\") +   theme_void()"},{"path":"https://ipeagit.github.io/censobr/dev/articles/documentation.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Census documentation","text":"data_dictionary() indicate definition variable, meaning categories case categorical variables. function currently covers data dictionaries Brazilian censuses since 1960 (19960, 1970, 1980, 1991, 2000 2010), includes dictionaries variables microdata (sample portion census) variables available census tract-level aggregate data.","code":"# Microdata variables data_dictionary(   year = 2010,   dataset = 'microdata'   )  # Census tract-level variables data_dictionary(   year = 2022,   dataset = 'tracts'   )"},{"path":"https://ipeagit.github.io/censobr/dev/articles/documentation.html","id":"questionnaires","dir":"Articles","previous_headings":"","what":"Questionnaires","title":"Census documentation","text":"Oftentimes, really important understand structure questionnaire used surveys. questionnaire() function includes questionnaires used data collection Brazilian censuses since 1970. , users need pass year parameter indicating edition census interest whether want 'short' questionnaire used interview households, 'short' one used sample component cesus.","code":"# short questionnaire questionnaire(   year = 2022,    type = 'short'   )  # long questionnaire questionnaire(   year = 2022,    type = 'long'   )"},{"path":"https://ipeagit.github.io/censobr/dev/articles/documentation.html","id":"interview-manual","dir":"Articles","previous_headings":"","what":"Interview manual","title":"Census documentation","text":"Finally, interview_manual() function downloads opens browser “Manual Recenseador”, .e. manual instructions IBGE’s census takers (recenseadores) collect census data. Manuals censuses since 1970 available.","code":"# 2022 interview_manual(year = 2022)  # 1960 interview_manual(year = 1960)"},{"path":"https://ipeagit.github.io/censobr/dev/articles/larger_than_memory.html","id":"larger-than-memory-data","dir":"Articles","previous_headings":"","what":"Larger-than-memory Data","title":"Working with larger-than-memory data","text":"Many data sets Brazilian censuses big load users’ RAM memory. avoid problem, {censobr} works files saved .parquet format , default, functions {censobr} returns Arrow table rather data.frame. really simple alternative ways work Arrow tables R without loading full data memory. cover four alternative approaches vignette. First, let’s read 2010 mortality data, ’ll use throughout vignette illustration purposes.","code":"library(censobr)  # read 2010 mortality data df <- censobr::read_mortality(   year = 2010,   add_labels = 'pt',   showProgress = FALSE   )"},{"path":"https://ipeagit.github.io/censobr/dev/articles/larger_than_memory.html","id":"dplyr","dir":"Articles","previous_headings":"Larger-than-memory Data","what":"1. {dplyr}","title":"Working with larger-than-memory data","text":"seamless integration arrow dplyr, Arrow tables can analyzed pretty much like regular data.frame using dplyrsyntax. small important difference, though. using {dplyr} Arrow table, operations executed immediately. Instead, {dplyr} builds lazy query plan evaluated explicitly ask results. retrieve actual results, need call either: collect(): brings results memory regular data.frame. compute(): materializes result Arrow format (e.g., new Arrow table). Without calling one , query just prepared executed, useful delaying heavy computations needed. example , create new Arrow table includes deaths records men state Rio de Janeiro without loading data memory. Note piece data collect() (.e. load memory) first observations data.","code":"library(dplyr)  # Filter deaths of men in the state of Rio de Janeiro rio <- df |>       filter(V0704 == 'Masculino' & abbrev_state == 'RJ')  head(rio) |>    collect() #> # A tibble: 6 × 26 #>   code_muni code_state abbrev_state name_state     code_region name_region #> *     <int>      <int> <chr>        <chr>                <int> <chr>       #> 1   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 2   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 3   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 4   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 5   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 6   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> # ℹ 20 more variables: code_weighting <chr>, V0001 <chr>, V0002 <chr>, #> #   V0011 <chr>, V0300 <dbl>, V0010 <dbl>, V1001 <chr>, V1002 <chr>, #> #   V1003 <chr>, V1004 <chr>, V1006 <chr>, V0703 <chr>, V0704 <chr>, #> #   V7051 <dbl>, V7052 <dbl>, M0703 <chr>, M0704 <chr>, M7051 <chr>, #> #   M7052 <chr>, V1005 <chr>"},{"path":"https://ipeagit.github.io/censobr/dev/articles/larger_than_memory.html","id":"duckdb","dir":"Articles","previous_headings":"Larger-than-memory Data","what":"2. {duckdb}","title":"Working with larger-than-memory data","text":"duckdb another powerful library work larger--memory data R database interface. different ways use duckdb, cover three alternatives","code":""},{"path":"https://ipeagit.github.io/censobr/dev/articles/larger_than_memory.html","id":"combining-duckdb-dbplyr","dir":"Articles","previous_headings":"Larger-than-memory Data > 2. {duckdb}","what":"2.1 Combining {duckdb} & {dbplyr}","title":"Working with larger-than-memory data","text":"One easy option combine duckdb & dbplyr. Note first need convert Arrow table DuckDB table arrow::to_duckdb(). Also note need use bit SQL syntax inside dplyr call. Using example :","code":"library(duckdb) library(dbplyr) library(arrow)  # Filter deaths of men in the state of Rio de Janeiro rio1 <- df |>         arrow::to_duckdb() |>         filter(sql(\"V0704 LIKE '%Masculino%' AND abbrev_state = 'RJ'\"))  head(rio1) |>    collect() #> # A tibble: 6 × 26 #>   code_muni code_state abbrev_state name_state     code_region name_region #>       <int>      <int> <chr>        <chr>                <int> <chr>       #> 1   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 2   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 3   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 4   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 5   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> 6   3300100         33 RJ           Rio de Janeiro           3 Sudeste     #> # ℹ 20 more variables: code_weighting <chr>, V0001 <chr>, V0002 <chr>, #> #   V0011 <chr>, V0300 <dbl>, V0010 <dbl>, V1001 <chr>, V1002 <chr>, #> #   V1003 <chr>, V1004 <chr>, V1006 <chr>, V0703 <chr>, V0704 <chr>, #> #   V7051 <dbl>, V7052 <dbl>, M0703 <chr>, M0704 <chr>, M7051 <chr>, #> #   M7052 <chr>, V1005 <chr>"},{"path":"https://ipeagit.github.io/censobr/dev/articles/larger_than_memory.html","id":"using-duckdb-with-sql","dir":"Articles","previous_headings":"Larger-than-memory Data > 2. {duckdb}","what":"2.2 Using {duckdb} with SQL","title":"Working with larger-than-memory data","text":"Another alternative combine duckdb DBI using database interface SQL syntax.","code":"library(duckdb) library(DBI)  # create databse connection con <- duckdb::dbConnect(duckdb::duckdb())  # register the data in the data base duckdb::duckdb_register_arrow(con, 'mortality_2010_tbl', df)  # Filter deaths of men in the state of Rio de Janeiro query <- glue::glue(\"SELECT * FROM 'mortality_2010_tbl'           WHERE V0704 LIKE '%Masculino%' AND abbrev_state = 'RJ';\")  rio2 <- DBI::dbGetQuery(con, query)  head(rio2) #>   code_muni code_state abbrev_state     name_state code_region name_region #> 1   3300100         33           RJ Rio de Janeiro           3     Sudeste #> 2   3300100         33           RJ Rio de Janeiro           3     Sudeste #> 3   3300100         33           RJ Rio de Janeiro           3     Sudeste #> 4   3300100         33           RJ Rio de Janeiro           3     Sudeste #> 5   3300100         33           RJ Rio de Janeiro           3     Sudeste #> 6   3300100         33           RJ Rio de Janeiro           3     Sudeste #>   code_weighting V0001 V0002         V0011   V0300    V0010 V1001 V1002 V1003 #> 1  3300100003001    33 00100 3300100003001 1285657 13.51819     3    05   013 #> 2  3300100003001    33 00100 3300100003001 6084726 12.76395     3    05   013 #> 3  3300100003002    33 00100 3300100003002  898500 10.68108     3    05   013 #> 4  3300100003002    33 00100 3300100003002 2581116 11.61204     3    05   013 #> 5  3300100003002    33 00100 3300100003002 3768175 12.93833     3    05   013 #> 6  3300100003002    33 00100 3300100003002 4125020 10.66262     3    05   013 #>   V1004  V1006             V0703     V0704 V7051 V7052 M0703 M0704 M7051 M7052 #> 1    00 Urbana     Março de 2010 Masculino    69    NA     2     2     2     2 #> 2    00 Urbana Fevereiro de 2010 Masculino    84    NA     2     2     2     2 #> 3    00 Urbana     Abril de 2010 Masculino    38    NA     2     2     2     2 #> 4    00 Urbana      Maio de 2010 Masculino    54    NA     2     2     2     2 #> 5    00  Rural    Agosto de 2009 Masculino    31    NA     2     2     2     2 #> 6    00 Urbana  Setembro de 2009 Masculino    28    NA     2     2     2     2 #>                                   V1005 #> 1                       Área urbanizada #> 2                   Área não urbanizada #> 3                       Área urbanizada #> 4                       Área urbanizada #> 5 Área rural exclusive aglomerado rural #> 6                       Área urbanizada"},{"path":"https://ipeagit.github.io/censobr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rafael H. M. Pereira. Author, maintainer. Rogério J. Barbosa. Author. Diego Rabatone Oliveira. Contributor. Neal Richardson. Contributor. Ipea - Institute Applied Economic Research. Copyright holder, funder.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira, R. H. M.; Barbosa, R. J. (2023) censobr: Download Data Brazil's Population Census. R package version v0.4.0, <https://CRAN.R-project.org/package=censobr>. DOI: 10.32614/CRAN.package.censobr.","code":"@Manual{,   title = {censobr: Download Data from Brazil's Population Census},   author = {Rafael H. M. Pereira and Rogério J. Barbosa},   year = {2023},   version = {v0.4.0},   url = {https://CRAN.R-project.org/package=censobr},   doi = {10.32614/CRAN.package.censobr}, }"},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"censobr-download-data-from-brazils-population-census-","dir":"","previous_headings":"","what":"Download Data from Brazil's Population Census","title":"Download Data from Brazil's Population Census","text":"{censobr} R package download data Brazil’s Population Census. provides simple efficient way download read data sets documentation population censuses taken 1960 country. package built top Arrow platform, allows users work larger--memory census data using {dplyr} familiar functions.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Data from Brazil's Population Census","text":"","code":"# install from CRAN install.packages(\"censobr\")  # or use the development version with latest features utils::remove.packages('censobr') remotes::install_github(\"ipeaGIT/censobr\", ref=\"dev\") library(censobr)"},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Download Data from Brazil's Population Census","text":"package currently includes 6 main functions download & read census data: read_population() read_households() read_mortality() read_families() read_emigration() read_tracts() {censobr} also includes support functions help users navigate documentation Brazilian censuses, providing convenient information data variables methodology: data_dictionary() questionnaire() interview_manual() Finally, package includes three functions help users manage data chached locally. censobr_cache() set_censobr_cache_dir() get_censobr_cache_dir() syntax {censobr} functions read data operate logic becomes intuitive download data set using single line code. Like : Note: data sets {censobr} enriched geography columns following name standards {geobr} package help data manipulation integration spatial data {geobr}. added columns : c(‘code_muni’, ‘code_state’, ‘abbrev_state’, ‘name_state’, ‘code_region’, ‘name_region’, ‘code_weighting’).","code":"read_households(   year,          # year of reference   columns,       # select columns to read   add_labels,    # add labels to categorical variables   as_data_frame, # return an Arrow DataSet or a data.frame   showProgress,  # show download progress bar   cache          # cache data for faster access later   )"},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"data-cache","dir":"","previous_headings":"Basic usage","what":"Data cache","title":"Download Data from Brazil's Population Census","text":"first time user runs function, {censobr} download file store locally. way, data needs downloaded . cache parameter set TRUE (Default), function read cached data, much faster. censobr_cache(): can used list /delete data files cached locally set_censobr_cache_dir(): can used set custom cache directory {censobr} files get_censobr_cache_dir(): returns path cache directory use","code":""},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"larger-than-memory-data","dir":"","previous_headings":"","what":"Larger-than-memory Data","title":"Download Data from Brazil's Population Census","text":"Microdata Brazilian census often big load users’ RAM memory. avoid problem, {censobr} default return Arrow table, can analyzed like regular data.frame using dplyr package without loading full data memory. info package vignette.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"contributing-to-censobr","dir":"","previous_headings":"","what":"Contributing to censobr","title":"Download Data from Brazil's Population Census","text":"like contribute {censobr}, ’re welcome open issue explain proposed contribution.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"related-projects","dir":"","previous_headings":"Contributing to censobr","what":"Related projects","title":"Download Data from Brazil's Population Census","text":"far know, {censobr} R package provides fast convenient access complete data sets documentation Brazilian censuses. microdadosBrasil package used provide access microdata several public data sets, unfortunately, discontinued.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"similar-packages-for-other-countries","dir":"","previous_headings":"Contributing to censobr","what":"Similar packages for other countries","title":"Download Data from Brazil's Population Census","text":"Canada: cancensus Chile: censo2017 US: tidycensus World: ipumsr","code":""},{"path":"https://ipeagit.github.io/censobr/dev/index.html","id":"credits-","dir":"","previous_headings":"","what":"Credits","title":"Download Data from Brazil's Population Census","text":"Original Census data collected Brazilian Institute Geography Statistics (IBGE). {censobr} package developed team Institute Applied Economic Research (Ipea), Brazil. want cite package, can cite : Pereira, Rafael H. M.; Barbosa, Rogério J. (2023) censobr: Download Data Brazil’s Population Census. R package version v0.4.0, https://CRAN.R-project.org/package=censobr. DOI: 10.32614/CRAN.package.censobr.","code":"bibentry(   bibtype  = \"Manual\",   title       = \"censobr: Download Data from Brazil's Population Census\",   author      = \"Rafael H. M. Pereira [aut, cre] and Rogério J. Barbosa [aut]\",   year        = 2023,   version     = \"v0.2.0\",   url         = \"https://CRAN.R-project.org/package=censobr\",   textVersion = \"Pereira, R. H. M.; Barbosa, R. J. (2023) censobr: Download Data from Brazil's Population Census. R package version v0.2.0, <https://CRAN.R-project.org/package=censobr>.\" )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/arrow_open_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely use arrow to open a Parquet file — arrow_open_dataset","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"function handles failure modes, including Parquet file corrupted.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/arrow_open_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"","code":"arrow_open_dataset(filename)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/arrow_open_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"filename local Parquet file","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/arrow_open_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"arrow::Dataset","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/cache_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Message when caching file — cache_message","title":"Message when caching file — cache_message","text":"Message caching file","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/cache_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message when caching file — cache_message","text":"","code":"cache_message(   local_file = parent.frame()$local_file,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/cache_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message when caching file — cache_message","text":"local_file address file passed download_file function. cache Logical. Whether cached data used.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/cache_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message when caching file — cache_message","text":"message","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr.html","id":null,"dir":"Reference","previous_headings":"","what":"censobr: Download Data from Brazil's Population Census — censobr","title":"censobr: Download Data from Brazil's Population Census — censobr","text":"Download data data Brazil's population Census.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"censobr: Download Data from Brazil's Population Census — censobr","text":"Please check vignettes data documentation website.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"censobr: Download Data from Brazil's Population Census — censobr","text":"Maintainer: Rafael H. M. Pereira rafa.pereira.br@gmail.com (ORCID) Authors: Rogério J. Barbosa antrologos@gmail.com (ORCID) contributors: Diego Rabatone Oliveira diraol@diraol.eng.br [contributor] Neal Richardson neal.p.richardson@gmail.com [contributor] Ipea - Institute Applied Economic Research [copyright holder, funder]","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage cached files from the censobr package — censobr_cache","title":"Manage cached files from the censobr package — censobr_cache","text":"Manage cached files censobr package","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage cached files from the censobr package — censobr_cache","text":"","code":"censobr_cache(list_files = TRUE, print_tree = FALSE, delete_file = NULL)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage cached files from the censobr package — censobr_cache","text":"list_files Logical. Whether print message address censobr data sets cached locally. Defaults TRUE. print_tree Logical. Whether cache files printed tree-like format. parameter works list_files = TRUE. Defaults FALSE. delete_file String. file name string pattern matches file path file cached locally deleted. Defaults NULL, file deleted. delete_file = \"\", cached files deleted.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage cached files from the censobr package — censobr_cache","text":"message indicating file exist /ones deleted local cache directory.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/censobr_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage cached files from the censobr package — censobr_cache","text":"","code":"# list all files cached censobr_cache(list_files = TRUE) #> ℹ Cache directory is currently empty. #> character(0)  # delete particular file censobr_cache(delete_file = '2010_deaths') #> ℹ Cache directory is currently empty. #> character(0)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/data_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Data dictionary of Brazil's census data — data_dictionary","title":"Data dictionary of Brazil's census data — data_dictionary","text":"Open browser data dictionary Brazil's census data.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/data_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data dictionary of Brazil's census data — data_dictionary","text":"","code":"data_dictionary(year, dataset, showProgress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/data_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data dictionary of Brazil's census data — data_dictionary","text":"year Numeric. Year reference format yyyy. dataset Character. dataset data dictionary opened. Options include c(\"population\", \"households\", \"families\", \"mortality\", \"emigration\", \"tracts\"). showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/data_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data dictionary of Brazil's census data — data_dictionary","text":"Returns NULL opens .html, .pdf excel file","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/data_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data dictionary of Brazil's census data — data_dictionary","text":"","code":"# Open data dictionary data_dictionary(year = 2010,                 dataset = 'population',                 showProgress = FALSE) #> ℹ Downloading data and storing it locally for future use. #> NULL  data_dictionary(year = 2022,                 dataset = 'tracts',                 showProgress = FALSE) #> ℹ Downloading data and storing it locally for future use. #> NULL  data_dictionary(year = 1980,                 dataset = 'households',                 showProgress = FALSE) #> ℹ Downloading data and storing it locally for future use. #> NULL"},{"path":"https://ipeagit.github.io/censobr/dev/reference/download_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download file from url — download_file","title":"Download file from url — download_file","text":"Download file url","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/download_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download file from url — download_file","text":"","code":"download_file(   file_url = parent.frame()$file_url,   showProgress = parent.frame()$showProgress,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/download_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download file from url — download_file","text":"file_url String. url. showProgress Logical. cache Logical.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/download_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download file from url — download_file","text":"string address file","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Error missing data sets — error_missing_datasets","title":"Error missing data sets — error_missing_datasets","text":"Error missing data sets","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error missing data sets — error_missing_datasets","text":"","code":"error_missing_datasets(d)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error missing data sets — error_missing_datasets","text":"d Vector data sets available","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error missing data sets — error_missing_datasets","text":"informative error","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Error missing years — error_missing_years","title":"Error missing years — error_missing_years","text":"Error missing years","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error missing years — error_missing_years","text":"","code":"error_missing_years(y)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error missing years — error_missing_years","text":"y Vector years available","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/error_missing_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error missing years — error_missing_years","text":"informative error","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/get_censobr_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to cache directory for censobr files — get_censobr_cache_dir","title":"Get path to cache directory for censobr files — get_censobr_cache_dir","text":"Get path cache directory currently used censobr files","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/get_censobr_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to cache directory for censobr files — get_censobr_cache_dir","text":"","code":"get_censobr_cache_dir()"},{"path":"https://ipeagit.github.io/censobr/dev/reference/get_censobr_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to cache directory for censobr files — get_censobr_cache_dir","text":"Path cache dir","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/get_censobr_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to cache directory for censobr files — get_censobr_cache_dir","text":"","code":"# get path to cache directory get_censobr_cache_dir() #> [1] \"/home/runner/.cache/R/censobr\""},{"path":"https://ipeagit.github.io/censobr/dev/reference/interview_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Interview manual of the data collection of Brazil's censuses — interview_manual","title":"Interview manual of the data collection of Brazil's censuses — interview_manual","text":"Open browser interview manual data collection Brazil's censuses","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/interview_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interview manual of the data collection of Brazil's censuses — interview_manual","text":"","code":"interview_manual(year = NULL, showProgress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/interview_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interview manual of the data collection of Brazil's censuses — interview_manual","text":"year Numeric. Year reference format yyyy. showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/interview_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interview manual of the data collection of Brazil's censuses — interview_manual","text":"Opens .pdf file browser","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/interview_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interview manual of the data collection of Brazil's censuses — interview_manual","text":"","code":"# Open interview manual on browser interview_manual(year = 2010, showProgress = FALSE) #> ℹ Downloading data and storing it locally for future use."},{"path":"https://ipeagit.github.io/censobr/dev/reference/merge_household_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Add household variables to the data set — merge_household_var","title":"Add household variables to the data set — merge_household_var","text":"Add household variables data set","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/merge_household_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add household variables to the data set — merge_household_var","text":"","code":"merge_household_var(   df,   year = parent.frame()$year,   add_labels = parent.frame()$add_labels,   showProgress = parent.frame()$showProgress )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/merge_household_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add household variables to the data set — merge_household_var","text":"df arrow Dataset passed function . year Numeric. Passed function . add_labels Character. Passed function . showProgress Logical. Passed function .","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/merge_household_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add household variables to the data set — merge_household_var","text":"arrow Dataset additional household variables.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/questionnaire.html","id":null,"dir":"Reference","previous_headings":"","what":"Questionnaires used in the data collection of Brazil's censuses — questionnaire","title":"Questionnaires used in the data collection of Brazil's censuses — questionnaire","text":"Open browser questionnaire used data collection Brazil's censuses","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/questionnaire.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Questionnaires used in the data collection of Brazil's censuses — questionnaire","text":"","code":"questionnaire(year = 2010, type = NULL, showProgress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/questionnaire.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Questionnaires used in the data collection of Brazil's censuses — questionnaire","text":"year Numeric. Year reference format yyyy. type Character. type questionnaire used survey, whether \"long\" one used sample component census, \"short\" one, answered households. Options include c(\"long\", \"short\"). showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/questionnaire.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Questionnaires used in the data collection of Brazil's censuses — questionnaire","text":"Opens .pdf file browser","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/questionnaire.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Questionnaires used in the data collection of Brazil's censuses — questionnaire","text":"","code":"library(censobr)  # Open questionnaire on browser questionnaire(year = 2010, type = 'long', showProgress = FALSE) #> ℹ Downloading data and storing it locally for future use."},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_emigration.html","id":null,"dir":"Reference","previous_headings":"","what":"Download microdata of emigration records from Brazil's census — read_emigration","title":"Download microdata of emigration records from Brazil's census — read_emigration","text":"Download microdata emigration records Brazil's census. Data collected sample component questionnaire.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_emigration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download microdata of emigration records from Brazil's census — read_emigration","text":"","code":"read_emigration(   year,   columns = NULL,   add_labels = NULL,   merge_households = FALSE,   as_data_frame = FALSE,   showProgress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_emigration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download microdata of emigration records from Brazil's census — read_emigration","text":"year Numeric. Year reference format yyyy. columns String. vector column names keep. rest columns read. Defaults NULL read columns. add_labels Character. Whether function add labels responses categorical variables. add_labels = \"pt\", function adds labels Portuguese. Defaults NULL. merge_households Logical. Indicate whether function merge household variables output data. Defaults FALSE. as_data_frame Logical. FALSE (Default), function returns Arrow Dataset, allows users work larger--memory data. TRUE, function returns data.frame. showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_emigration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download microdata of emigration records from Brazil's census — read_emigration","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_emigration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download microdata of emigration records from Brazil's census — read_emigration","text":"","code":"# return data as arrow Dataset df <- read_emigration(   year = 2010,   showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use.  # return data as data.frame df <- read_emigration(   year = 2010,   as_data_frame = TRUE,   showProgress = FALSE   ) #> ℹ Reading data cached locally."},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_families.html","id":null,"dir":"Reference","previous_headings":"","what":"Download microdata of family records from Brazil's census — read_families","title":"Download microdata of family records from Brazil's census — read_families","text":"Download microdata family records Brazil's census. Data collected sample component questionnaire.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_families.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download microdata of family records from Brazil's census — read_families","text":"","code":"read_families(   year,   columns = NULL,   add_labels = NULL,   as_data_frame = FALSE,   showProgress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_families.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download microdata of family records from Brazil's census — read_families","text":"year Numeric. Year reference format yyyy. columns String. vector column names keep. rest columns read. Defaults NULL read columns. add_labels Character. Whether function add labels responses categorical variables. add_labels = \"pt\", function adds labels Portuguese. Defaults NULL. as_data_frame Logical. FALSE (Default), function returns Arrow Dataset, allows users work larger--memory data. TRUE, function returns data.frame. showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_families.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download microdata of family records from Brazil's census — read_families","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_families.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download microdata of family records from Brazil's census — read_families","text":"","code":"# return data as arrow Dataset df <- read_families(   year = 2000,   showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use."},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_households.html","id":null,"dir":"Reference","previous_headings":"","what":"Download microdata of household records from Brazil's census — read_households","title":"Download microdata of household records from Brazil's census — read_households","text":"Download microdata household records Brazil's census. Data collected sample component questionnaire.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_households.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download microdata of household records from Brazil's census — read_households","text":"","code":"read_households(   year,   columns = NULL,   add_labels = NULL,   as_data_frame = FALSE,   showProgress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_households.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download microdata of household records from Brazil's census — read_households","text":"year Numeric. Year reference format yyyy. columns String. vector column names keep. rest columns read. Defaults NULL read columns. add_labels Character. Whether function add labels responses categorical variables. add_labels = \"pt\", function adds labels Portuguese. Defaults NULL. as_data_frame Logical. FALSE (Default), function returns Arrow Dataset, allows users work larger--memory data. TRUE, function returns data.frame. showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_households.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download microdata of household records from Brazil's census — read_households","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_households.html","id":"-census","dir":"Reference","previous_headings":"","what":"1960 Census","title":"Download microdata of household records from Brazil's census — read_households","text":"1960 microdata version available censobr combination two versions Demographic Census sample. 25% sample data 1960 Census never fully processed IBGE - several states questionnaires digitized. Currently, dataset data 16 states Federation (contested border region Minas Gerais Espirito Santo called Serra dos Aimores). Information missing states former Northern Region, Maranhão, Piaui, Guanabara, Santa Catarina, Espírito Santo. 1965, IBGE decided draw probabilistic sub-sample approximately 1.27% population, including units federation. data, IBGE produced several official reports time. data censobr combination two datasets. pre-processed 1.27% sample data ensured data consistency, given original data partially corrupted. also created sample weight variable correct unbalanced data expand te sample total population. data 25% sample, weights expand municipal totals. Meanwhile, data 1.27% sample, weights expand state totals. Additionally, constructed variables allow approximate incorporation complex sample design, enabling proper calculation standard errors confidence intervals. can read 1960 Census find thorough documentation dataset processed link https://github.com/antrologos/ConsistenciaCenso1960Br.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_households.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download microdata of household records from Brazil's census — read_households","text":"","code":"# return data as arrow Dataset df <- read_households(   year = 2010,   showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use."},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_mortality.html","id":null,"dir":"Reference","previous_headings":"","what":"Download microdata of death records from Brazil's census — read_mortality","title":"Download microdata of death records from Brazil's census — read_mortality","text":"Download microdata death records Brazil's census. Data collected sample component questionnaire.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_mortality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download microdata of death records from Brazil's census — read_mortality","text":"","code":"read_mortality(   year,   columns = NULL,   add_labels = NULL,   merge_households = FALSE,   as_data_frame = FALSE,   showProgress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_mortality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download microdata of death records from Brazil's census — read_mortality","text":"year Numeric. Year reference format yyyy. columns String. vector column names keep. rest columns read. Defaults NULL read columns. add_labels Character. Whether function add labels responses categorical variables. add_labels = \"pt\", function adds labels Portuguese. Defaults NULL. merge_households Logical. Indicate whether function merge household variables output data. Defaults FALSE. as_data_frame Logical. FALSE (Default), function returns Arrow Dataset, allows users work larger--memory data. TRUE, function returns data.frame. showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_mortality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download microdata of death records from Brazil's census — read_mortality","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_mortality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download microdata of death records from Brazil's census — read_mortality","text":"","code":"library(censobr)  # return data as arrow Dataset df <- read_mortality(   year = 2010,   showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use.  # dplyr::glimpse(df)  # return data as data.frame df <- read_mortality(   year = 2010,   as_data_frame = TRUE,   showProgress = FALSE   ) #> ℹ Reading data cached locally.  # dplyr::glimpse(df)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Download microdata of population records from Brazil's census — read_population","title":"Download microdata of population records from Brazil's census — read_population","text":"Download microdata population records Brazil's census. Data collected sample component questionnaire.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download microdata of population records from Brazil's census — read_population","text":"","code":"read_population(   year,   columns = NULL,   add_labels = NULL,   as_data_frame = FALSE,   showProgress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download microdata of population records from Brazil's census — read_population","text":"year Numeric. Year reference format yyyy. columns String. vector column names keep. rest columns read. Defaults NULL read columns. add_labels Character. Whether function add labels responses categorical variables. add_labels = \"pt\", function adds labels Portuguese. Defaults NULL. as_data_frame Logical. FALSE (Default), function returns Arrow Dataset, allows users work larger--memory data. TRUE, function returns data.frame. showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download microdata of population records from Brazil's census — read_population","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_population.html","id":"-census","dir":"Reference","previous_headings":"","what":"1960 Census","title":"Download microdata of population records from Brazil's census — read_population","text":"1960 microdata version available censobr combination two versions Demographic Census sample. 25% sample data 1960 Census never fully processed IBGE - several states questionnaires digitized. Currently, dataset data 16 states Federation (contested border region Minas Gerais Espirito Santo called Serra dos Aimores). Information missing states former Northern Region, Maranhão, Piaui, Guanabara, Santa Catarina, Espírito Santo. 1965, IBGE decided draw probabilistic sub-sample approximately 1.27% population, including units federation. data, IBGE produced several official reports time. data censobr combination two datasets. pre-processed 1.27% sample data ensured data consistency, given original data partially corrupted. also created sample weight variable correct unbalanced data expand te sample total population. data 25% sample, weights expand municipal totals. Meanwhile, data 1.27% sample, weights expand state totals. Additionally, constructed variables allow approximate incorporation complex sample design, enabling proper calculation standard errors confidence intervals. can read 1960 Census find thorough documentation dataset processed link https://github.com/antrologos/ConsistenciaCenso1960Br.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download microdata of population records from Brazil's census — read_population","text":"","code":"# return data as arrow Dataset df <- read_population(   year = 2010,   showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use."},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_tracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Download census tract-level data from Brazil's censuses — read_tracts","title":"Download census tract-level data from Brazil's censuses — read_tracts","text":"Download census tract-level aggregate data Brazil's censuses.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_tracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download census tract-level data from Brazil's censuses — read_tracts","text":"","code":"read_tracts(   year,   dataset,   as_data_frame = FALSE,   showProgress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_tracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download census tract-level data from Brazil's censuses — read_tracts","text":"year Numeric. Year reference format yyyy. dataset Character. dataset opened. 2010 Census, valid options : c(\"Basico\", \"Domicilio\", \"DomicilioRenda\", \"Responsavel\", \"ResponsavelRenda\", \"Pessoa\", \"PessoaRenda\", \"Entorno\"). 2022 Census, valid options : c(\"Basico\", \"Domicilio\", \"ResponsavelRenda\", \"Pessoas\", \"Indigenas\", \"Quilombolas\", \"Entorno\", \"Obitos\", \"Preliminares\"). censobr package exposes original IBGE census tracts datasets, regrouping broader themes appending geographic identifiers align seamlessly geobr shapefiles. complete description datasets, themes, variables, check data_dictionary(year = 2010, dataset = \"tracts\") data_dictionary(year = 2022, dataset = \"tracts\"). as_data_frame Logical. FALSE (Default), function returns Arrow Dataset, allows users work larger--memory data. TRUE, function returns data.frame. showProgress Logical. Defaults TRUE display download progress bar. progress bar reflects downloading time, time load data memory. cache Logical. Whether function read data cached locally, much faster. Defaults TRUE. first time user runs function, censobr download file store locally file needs download . FALSE, function download data overwrite local file.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_tracts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download census tract-level data from Brazil's censuses — read_tracts","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/read_tracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download census tract-level data from Brazil's censuses — read_tracts","text":"","code":"library(censobr)  # return data as arrow Dataset df <- read_tracts(   year = 2022,   dataset = 'Domicilio',   showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use.  # return data as data.frame df <- read_tracts(   year = 2010,   dataset = 'Basico',   as_data_frame = TRUE,   showProgress = FALSE   ) #> ℹ Downloading data and storing it locally for future use."},{"path":"https://ipeagit.github.io/censobr/dev/reference/set_censobr_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set custom cache directory for censobr files — set_censobr_cache_dir","title":"Set custom cache directory for censobr files — set_censobr_cache_dir","text":"Set custom directory caching files censobr package. user needs run function . set directory persistent across R sessions.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/set_censobr_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set custom cache directory for censobr files — set_censobr_cache_dir","text":"","code":"set_censobr_cache_dir(path)"},{"path":"https://ipeagit.github.io/censobr/dev/reference/set_censobr_cache_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set custom cache directory for censobr files — set_censobr_cache_dir","text":"path String. path existing directory. defaults path = NULL, use default directory","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/set_censobr_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set custom cache directory for censobr files — set_censobr_cache_dir","text":"message pointing directory censobr files cached.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/censobr/dev/reference/set_censobr_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set custom cache directory for censobr files — set_censobr_cache_dir","text":"","code":"# Set custom cache directory tempd <- tempdir() set_censobr_cache_dir(path = tempd) #> ℹ censobr files will be cached at /tmp/RtmpRYXusE.  # back to default path set_censobr_cache_dir(path = NULL) #> ℹ censobr files will be cached at /home/runner/.cache/R/censobr."},{"path":"https://ipeagit.github.io/censobr/dev/reference/using_default_censobr_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if user is using the default cache dir of censobr — using_default_censobr_cache_dir","title":"Check if user is using the default cache dir of censobr — using_default_censobr_cache_dir","text":"Check user using default cache dir censobr","code":""},{"path":"https://ipeagit.github.io/censobr/dev/reference/using_default_censobr_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if user is using the default cache dir of censobr — using_default_censobr_cache_dir","text":"","code":"using_default_censobr_cache_dir()"},{"path":"https://ipeagit.github.io/censobr/dev/reference/using_default_censobr_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if user is using the default cache dir of censobr — using_default_censobr_cache_dir","text":"TRUE FALSE","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v0419999-dev","dir":"Changelog","previous_headings":"","what":"censobr v0.4.19999 dev","title":"censobr v0.4.19999 dev","text":"New function get_censobr_cache_dir() function set_censobr_cache_dir() now sets cache directories persist across R sessions. Closes #55. data saved versioned directory inside cache directory. year parameter longer defaults 2010. Improved internal code merge_households = TRUE avoid duplicated columns Improved package info error messages {cli} {censobr} now imports {cli} {rlang} Census-tract level data Census-tract level data dictionary data sets save .parquet compressed using compression='zstd' compression_level = 22. almost halved size data files, making downloads much efficient minimal cost reading time. data sets now sorted key columns speed join operations. Closes #60. Fixed annoying message arrow metadata. closed #56.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v041","dir":"Changelog","previous_headings":"","what":"censobr v0.4.1","title":"censobr v0.4.1","text":"CRAN release: 2025-02-28 Removed {duckplyr} package dependency Passing parameter merge_households = TRUE now returns expected result.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v040","dir":"Changelog","previous_headings":"","what":"censobr v0.4.0","title":"censobr v0.4.0","text":"CRAN release: 2024-09-20 functions (read_mortality, read_emigration) now include new parameter merge_households (logical) indicate whether function merge household variables output data. Partially closes #31 {censobr} now imports {duckplyr} package, used merging household data. Closes issue #31. New vignette showing work larger--memory data. Closes #42. vignette still needs expanded examples, though. Updated Vignettes Closes issue #51 Removed dependency {httr} package Now using curl::multi_download() download files parallel. brings advantage package now automatically detects whether data/documentation file updated downloaded . Population microdata year 2000 now include columns included . Closes #44 Included additional columns fixed minor errors data dictionary 2010 microdata. Closes #45 Interview manual Data dictionary microdata population households Microdata population households 1970: fixed geography columns. Closes #52 1991 census: Data dictionary microdata population households. Closes #28","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v032","dir":"Changelog","previous_headings":"","what":"censobr v0.3.2","title":"censobr v0.3.2","text":"CRAN release: 2024-03-23 Moved {arrow} package back Imports Preliminary aggregate results census tracts","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v031","dir":"Changelog","previous_headings":"","what":"censobr v0.3.1","title":"censobr v0.3.1","text":"CRAN release: 2024-02-23 Moved {arrow} package Imports Suggests {arrow} team fixes conflict CRAN policies related downloading binary software. See . Diego Rabatone Oliveira Neal Richardson","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v030","dir":"Changelog","previous_headings":"","what":"censobr v0.3.0","title":"censobr v0.3.0","text":"CRAN release: 2024-01-09 questionnaire() function now accepts questionnaires type: \"long\" \"short\". Updated census tract data following latest update IBGE Oct/2023. Closed #38. result, package moved data release v0.3.0. Replaced .onAttach .onLoad package works censobr::function() Fixed documentation various functions. Fixed issue make sure censobr uses suggested packages conditionally CRAN Fixed message user requests data set / file year available Questionnaires interview manuals Short questionnaires every census 1960 2022. Long questionnaire 1960 2022 censuses.","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v020","dir":"Changelog","previous_headings":"","what":"censobr v0.2.0","title":"censobr v0.2.0","text":"CRAN release: 2023-09-30 New function read_tracts() read Census tract-level aggregate data. New function data_dictionary() opens browser data dictionary Brazil’s census data. New function questionnaire() opens browser questionnaire used data collection Brazil’s censuses. New function set_censobr_cache_dir() allows users set custom directory caching files censobr package. New data sets 1970, 1980 1991 censuses: microdata population households PLUS Census tract-level aggregate data 2010. Closes #6, #7, #8 1#8 New vignette Census tract-level aggregate data 2010. New vignette covering functions census documentation dictionary variables. Closes #2. Running censobr_cache(delete_file = '') now removes data directories related censobr. censobr now uses suggested package {geobr} conditionally Microdata population, households Microdata population, households Microdata population, households Microdata population, households families. Microdata population, households, deaths emigration. Census tract-level aggregate data [New]","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v011","dir":"Changelog","previous_headings":"","what":"censobr v0.1.1","title":"censobr v0.1.1","text":"CRAN release: 2023-09-11 Using cache_dir data_release global variables. Closes #13 Running censobr_cache(delete_file = '')now also remove data old data releases. Closes #14. Large improvement code coverage Changed location cached data directory inside tools::R_user_dir(“censobr”, = “cache”). package now automatically deletes cached data previous data releases might exist previous versions package Clean cache intro vignette testhat checks","code":""},{"path":"https://ipeagit.github.io/censobr/dev/news/index.html","id":"censobr-v010","dir":"Changelog","previous_headings":"","what":"censobr v0.1.0","title":"censobr v0.1.0","text":"CRAN release: 2023-09-06 Launch censobr v0.1.0 CRAN https://cran.r-project.org/package=censobr data sets now enriched geography columns following {geobr} name standards. help data manipulation integration spatial data {geobr} package. added columns : c(‘code_muni’, ‘code_state’, ‘abbrev_state’, ‘name_state’, ‘code_region’, ‘name_region’, ‘code_weighting’). Closes #5. Microdata population, households families. Microdata population, households, deaths emigration.","code":""}]
